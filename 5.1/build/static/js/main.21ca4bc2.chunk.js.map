{"version":3,"sources":["demo.tsx","index.tsx"],"names":["columns","title","dataIndex","sorter","a","b","age","filters","text","value","onFilter","record","address","indexOf","key","render","size","DownOutlined","data","i","push","name","Number","description","defaultExpandable","expandedRowRender","defaultTitle","defaultFooter","App","useState","bordered","setBordered","loading","setLoading","setSize","expandable","setExpandable","showTitle","setShowTitle","showHeader","setShowHeader","showfooter","setShowFooter","rowSelection","setRowSelection","hasData","setHasData","undefined","tableLayout","setTableLayout","top","setTop","bottom","setBottom","ellipsis","setEllipsis","yScroll","setYScroll","xScroll","setXScroll","scroll","y","x","tableColumns","map","item","fixed","length","tableProps","footer","layout","className","style","marginBottom","Item","label","checked","onChange","enable","newHasData","Group","e","target","Button","pagination","position","dataSource","createRoot","document","getElementById"],"mappings":"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","file":"static/js/main.21ca4bc2.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './index.css';\nimport { DownOutlined } from '@ant-design/icons';\nimport type { RadioChangeEvent } from 'antd';\nimport { Form, Radio, Space, Switch, Table } from 'antd';\nimport type { SizeType } from 'antd/es/config-provider/SizeContext';\nimport type { ColumnsType, TableProps } from 'antd/es/table';\nimport type { ExpandableConfig, TableRowSelection } from 'antd/es/table/interface';\n\ninterface DataType {\n  key: number;\n  name: string;\n  age: number;\n  address: string;\n  description: string;\n}\n\ntype TablePaginationPosition =\n  | 'topLeft'\n  | 'topCenter'\n  | 'topRight'\n  | 'bottomLeft'\n  | 'bottomCenter'\n  | 'bottomRight';\n\nconst columns: ColumnsType<DataType> = [\n  {\n    title: 'Name',\n    dataIndex: 'name',\n  },\n  {\n    title: 'Age',\n    dataIndex: 'age',\n    sorter: (a, b) => a.age - b.age,\n  },\n  {\n    title: 'Address',\n    dataIndex: 'address',\n    filters: [\n      {\n        text: 'London',\n        value: 'London',\n      },\n      {\n        text: 'New York',\n        value: 'New York',\n      },\n    ],\n    onFilter: (value, record) => record.address.indexOf(value as string) === 0,\n  },\n  {\n    title: 'Action',\n    key: 'action',\n    sorter: true,\n    render: () => (\n      <Space size=\"middle\">\n        <a>Delete</a>\n        <a>\n          <Space>\n            More actions\n            <DownOutlined />\n          </Space>\n        </a>\n      </Space>\n    ),\n  },\n];\n\nconst data: DataType[] = [];\nfor (let i = 1; i <= 10; i++) {\n  data.push({\n    key: i,\n    name: 'John Brown',\n    age: Number(`${i}2`),\n    address: `New York No. ${i} Lake Park`,\n    description: `My name is John Brown, I am ${i}2 years old, living in New York No. ${i} Lake Park.`,\n  });\n}\n\nconst defaultExpandable = { expandedRowRender: (record: DataType) => <p>{record.description}</p> };\nconst defaultTitle = () => 'Here is title';\nconst defaultFooter = () => 'Here is footer';\n\nconst App: React.FC = () => {\n  const [bordered, setBordered] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [size, setSize] = useState<SizeType>('large');\n  const [expandable, setExpandable] = useState<ExpandableConfig<DataType> | undefined>(\n    defaultExpandable,\n  );\n  const [showTitle, setShowTitle] = useState(false);\n  const [showHeader, setShowHeader] = useState(true);\n  const [showfooter, setShowFooter] = useState(true);\n  const [rowSelection, setRowSelection] = useState<TableRowSelection<DataType> | undefined>({});\n  const [hasData, setHasData] = useState(true);\n  const [tableLayout, setTableLayout] = useState(undefined);\n  const [top, setTop] = useState<TablePaginationPosition | 'none'>('none');\n  const [bottom, setBottom] = useState<TablePaginationPosition>('bottomRight');\n  const [ellipsis, setEllipsis] = useState(false);\n  const [yScroll, setYScroll] = useState(false);\n  const [xScroll, setXScroll] = useState<string | undefined>(undefined);\n\n  const handleBorderChange = (enable: boolean) => {\n    setBordered(enable);\n  };\n\n  const handleLoadingChange = (enable: boolean) => {\n    setLoading(enable);\n  };\n\n  const handleSizeChange = (e: RadioChangeEvent) => {\n    setSize(e.target.value);\n  };\n\n  const handleTableLayoutChange = (e: RadioChangeEvent) => {\n    setTableLayout(e.target.value);\n  };\n\n  const handleExpandChange = (enable: boolean) => {\n    setExpandable(enable ? defaultExpandable : undefined);\n  };\n\n  const handleEllipsisChange = (enable: boolean) => {\n    setEllipsis(enable);\n  };\n\n  const handleTitleChange = (enable: boolean) => {\n    setShowTitle(enable);\n  };\n\n  const handleHeaderChange = (enable: boolean) => {\n    setShowHeader(enable);\n  };\n\n  const handleFooterChange = (enable: boolean) => {\n    setShowFooter(enable);\n  };\n\n  const handleRowSelectionChange = (enable: boolean) => {\n    setRowSelection(enable ? {} : undefined);\n  };\n\n  const handleYScrollChange = (enable: boolean) => {\n    setYScroll(enable);\n  };\n\n  const handleXScrollChange = (e: RadioChangeEvent) => {\n    setXScroll(e.target.value);\n  };\n\n  const handleDataChange = (newHasData: boolean) => {\n    setHasData(newHasData);\n  };\n\n  const scroll: { x?: number | string; y?: number | string } = {};\n  if (yScroll) {\n    scroll.y = 240;\n  }\n  if (xScroll) {\n    scroll.x = '100vw';\n  }\n\n  const tableColumns = columns.map((item) => ({ ...item, ellipsis }));\n  if (xScroll === 'fixed') {\n    tableColumns[0].fixed = true;\n    tableColumns[tableColumns.length - 1].fixed = 'right';\n  }\n\n  const tableProps: TableProps<DataType> = {\n    bordered,\n    loading,\n    size,\n    expandable,\n    title: showTitle ? defaultTitle : undefined,\n    showHeader,\n    footer: showfooter ? defaultFooter : undefined,\n    rowSelection,\n    scroll,\n    tableLayout,\n  };\n\n  return (\n    <>\n      <Form\n        layout=\"inline\"\n        className=\"components-table-demo-control-bar\"\n        style={{ marginBottom: 16 }}\n      >\n        <Form.Item label=\"Bordered\">\n          <Switch checked={bordered} onChange={handleBorderChange} />\n        </Form.Item>\n        <Form.Item label=\"loading\">\n          <Switch checked={loading} onChange={handleLoadingChange} />\n        </Form.Item>\n        <Form.Item label=\"Title\">\n          <Switch checked={showTitle} onChange={handleTitleChange} />\n        </Form.Item>\n        <Form.Item label=\"Column Header\">\n          <Switch checked={showHeader} onChange={handleHeaderChange} />\n        </Form.Item>\n        <Form.Item label=\"Footer\">\n          <Switch checked={showfooter} onChange={handleFooterChange} />\n        </Form.Item>\n        <Form.Item label=\"Expandable\">\n          <Switch checked={!!expandable} onChange={handleExpandChange} />\n        </Form.Item>\n        <Form.Item label=\"Checkbox\">\n          <Switch checked={!!rowSelection} onChange={handleRowSelectionChange} />\n        </Form.Item>\n        <Form.Item label=\"Fixed Header\">\n          <Switch checked={!!yScroll} onChange={handleYScrollChange} />\n        </Form.Item>\n        <Form.Item label=\"Has Data\">\n          <Switch checked={!!hasData} onChange={handleDataChange} />\n        </Form.Item>\n        <Form.Item label=\"Ellipsis\">\n          <Switch checked={!!ellipsis} onChange={handleEllipsisChange} />\n        </Form.Item>\n        <Form.Item label=\"Size\">\n          <Radio.Group value={size} onChange={handleSizeChange}>\n            <Radio.Button value=\"large\">Large</Radio.Button>\n            <Radio.Button value=\"middle\">Middle</Radio.Button>\n            <Radio.Button value=\"small\">Small</Radio.Button>\n          </Radio.Group>\n        </Form.Item>\n        <Form.Item label=\"Table Scroll\">\n          <Radio.Group value={xScroll} onChange={handleXScrollChange}>\n            <Radio.Button value={undefined}>Unset</Radio.Button>\n            <Radio.Button value=\"scroll\">Scroll</Radio.Button>\n            <Radio.Button value=\"fixed\">Fixed Columns</Radio.Button>\n          </Radio.Group>\n        </Form.Item>\n        <Form.Item label=\"Table Layout\">\n          <Radio.Group value={tableLayout} onChange={handleTableLayoutChange}>\n            <Radio.Button value={undefined}>Unset</Radio.Button>\n            <Radio.Button value=\"fixed\">Fixed</Radio.Button>\n          </Radio.Group>\n        </Form.Item>\n        <Form.Item label=\"Pagination Top\">\n          <Radio.Group\n            value={top}\n            onChange={(e) => {\n              setTop(e.target.value);\n            }}\n          >\n            <Radio.Button value=\"topLeft\">TopLeft</Radio.Button>\n            <Radio.Button value=\"topCenter\">TopCenter</Radio.Button>\n            <Radio.Button value=\"topRight\">TopRight</Radio.Button>\n            <Radio.Button value=\"none\">None</Radio.Button>\n          </Radio.Group>\n        </Form.Item>\n        <Form.Item label=\"Pagination Bottom\">\n          <Radio.Group\n            value={bottom}\n            onChange={(e) => {\n              setBottom(e.target.value);\n            }}\n          >\n            <Radio.Button value=\"bottomLeft\">BottomLeft</Radio.Button>\n            <Radio.Button value=\"bottomCenter\">BottomCenter</Radio.Button>\n            <Radio.Button value=\"bottomRight\">BottomRight</Radio.Button>\n            <Radio.Button value=\"none\">None</Radio.Button>\n          </Radio.Group>\n        </Form.Item>\n      </Form>\n      <Table\n        {...tableProps}\n        pagination={{ position: [top as TablePaginationPosition, bottom] }}\n        columns={tableColumns}\n        dataSource={hasData ? data : []}\n        scroll={scroll}\n      />\n    </>\n  );\n};\n\nexport default App;","\nimport React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport Demo from './demo';\n\ncreateRoot(document.getElementById('container')).render(\n<div>\n  <Demo />\n  <Demo />\n  <Demo />\n  <Demo />\n  <Demo />\n  <Demo />\n  <Demo />\n  <Demo />\n  <Demo />\n  <Demo />\n  <Demo />\n  <Demo />\n  <Demo />\n  <Demo />\n  <Demo />\n  <Demo />\n  <Demo />\n  <Demo />\n  <Demo />\n  <Demo />\n  <Demo />\n  <Demo />\n  <Demo />\n  <Demo />\n  <Demo />\n  <Demo />\n  <Demo />\n  <Demo />\n  <Demo />\n  <Demo />\n</div>\n);\n\n"],"sourceRoot":""}